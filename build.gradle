plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.cloud'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

ext {
	set('springCloudVersion', "2023.0.3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0"
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.16'
	implementation 'mysql:mysql-connector-java:8.0.33'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-crypto'
	implementation 'org.modelmapper:modelmapper:3.1.1'
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.1.0'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'io.github.cdimascio:dotenv-java:3.0.0'
	implementation 'software.amazon.awssdk:s3:2.20.26'
	implementation 'software.amazon.awssdk:cloudwatch:2.20.26'
	implementation 'software.amazon.awssdk:core:2.20.26'
	implementation 'com.sendgrid:sendgrid-java:4.7.2'
	implementation 'com.amazonaws:aws-java-sdk-sns:1.12.418'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
